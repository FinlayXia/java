递归算法（recursion）
一、基本思想
“自己调用自己”
一个使用递归技术的方法将会直接或者间接的调用自己
二、内容
包括两个部分：
1、递归头：什么时候不调用自身方法，如果没有头将陷入死循环，是递归算法的结束条件
2、递归体：什么时候调用自身方法
三、实例
1、基本用法
public class TextRecursion01 {
public static void main(String[] args) {
	a();
 }
static int count = 0;
static void a() {
	System.out.println("a");
	count++;
	if(count<5) {
		a();//递归体
		}else {
		return;//递归头
		}
	}
}
2、递归算法n！
static long factorial(int n) {
		if(n==1) {
		return 1;//递归头
		}else {//递归体
		return n*factorial(n-1);//n!=n*(n-1)
		}	
	}
3、while算法	
static long factorialLoop(int a) {
		long d3 = System.currentTimeMillis(); 
		long result = 1;
		while (a>1) {
			result*=a*(a-1);
			}
		long d4 = System.currentTimeMillis(); 
		System.out.println(result);
		System.out.println("循环耗时："+(d4-d3));
		return result;
		}
四、对比
递归算法结构简介，耗时长
while算法结构长，耗时短	